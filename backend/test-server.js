// –¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–±–æ—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
const testServer = async () => {
  const baseUrl = 'http://localhost:3001';
  
  console.log('üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞...\n');
  
  try {
    // –¢–µ—Å—Ç health endpoint
    console.log('1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ health endpoint...');
    const healthResponse = await fetch(`${baseUrl}/api/health`);
    const healthData = await healthResponse.json();
    console.log('‚úÖ Health:', healthData);
    
    // –¢–µ—Å—Ç check-subscription endpoint (–∑ —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏)
    console.log('\n2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ check-subscription endpoint...');
    const testData = {
      userId: 123456789,
      channel: '@MiniAppsUkraine',
      initData: 'test_init_data'
    };
    
    const subscriptionResponse = await fetch(`${baseUrl}/api/check-subscription`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testData)
    });
    
    const subscriptionData = await subscriptionResponse.json();
    console.log('üìã Subscription response:', subscriptionData);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', error.message);
    console.log('\nüí° –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ: npm run dev');
  }
};

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤
testServer(); 